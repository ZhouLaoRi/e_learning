<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.atguigu.springboot.mapper.CourseMapper" >
  <resultMap id="BaseResultMap" type="com.atguigu.springboot.entity.Course" >
    <id column="course_id" property="courseId" jdbcType="INTEGER" />
    <result column="course_name" property="courseName" jdbcType="VARCHAR" />
    <result column="course_intro" property="courseIntro" jdbcType="VARCHAR" />
    <result column="course_author" property="courseAuthor" jdbcType="VARCHAR" />
    <result column="course_avatar" property="courseAvatar" jdbcType="VARCHAR" />
    <result column="course_view" property="courseView" jdbcType="INTEGER" />
    <result column="course_like" property="courseLike" jdbcType="INTEGER" />
    <result column="course_level" property="courseLevel" jdbcType="INTEGER" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="delete_time" property="deleteTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    course_id, course_name, course_intro, course_author, course_avatar, course_view, 
    course_like, course_level, type_id, create_time, update_time, delete_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.atguigu.springboot.entity.CourseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from course
    where course_id = #{courseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from course
    where course_id = #{courseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.atguigu.springboot.entity.CourseExample" >
    delete from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.atguigu.springboot.entity.Course" >
    insert into course (course_id, course_name, course_intro, 
      course_author, course_avatar, course_view, 
      course_like, course_level, type_id, 
      create_time, update_time, delete_time
      )
    values (#{courseId,jdbcType=INTEGER}, #{courseName,jdbcType=VARCHAR}, #{courseIntro,jdbcType=VARCHAR}, 
      #{courseAuthor,jdbcType=VARCHAR}, #{courseAvatar,jdbcType=VARCHAR}, #{courseView,jdbcType=INTEGER}, 
      #{courseLike,jdbcType=INTEGER}, #{courseLevel,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{deleteTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.atguigu.springboot.entity.Course" >
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="courseName != null" >
        course_name,
      </if>
      <if test="courseIntro != null" >
        course_intro,
      </if>
      <if test="courseAuthor != null" >
        course_author,
      </if>
      <if test="courseAvatar != null" >
        course_avatar,
      </if>
      <if test="courseView != null" >
        course_view,
      </if>
      <if test="courseLike != null" >
        course_like,
      </if>
      <if test="courseLevel != null" >
        course_level,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="deleteTime != null" >
        delete_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="courseName != null" >
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseIntro != null" >
        #{courseIntro,jdbcType=VARCHAR},
      </if>
      <if test="courseAuthor != null" >
        #{courseAuthor,jdbcType=VARCHAR},
      </if>
      <if test="courseAvatar != null" >
        #{courseAvatar,jdbcType=VARCHAR},
      </if>
      <if test="courseView != null" >
        #{courseView,jdbcType=INTEGER},
      </if>
      <if test="courseLike != null" >
        #{courseLike,jdbcType=INTEGER},
      </if>
      <if test="courseLevel != null" >
        #{courseLevel,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteTime != null" >
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.atguigu.springboot.entity.CourseExample" resultType="java.lang.Integer" >
    select count(*) from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update course
    <set >
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.courseName != null" >
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.courseIntro != null" >
        course_intro = #{record.courseIntro,jdbcType=VARCHAR},
      </if>
      <if test="record.courseAuthor != null" >
        course_author = #{record.courseAuthor,jdbcType=VARCHAR},
      </if>
      <if test="record.courseAvatar != null" >
        course_avatar = #{record.courseAvatar,jdbcType=VARCHAR},
      </if>
      <if test="record.courseView != null" >
        course_view = #{record.courseView,jdbcType=INTEGER},
      </if>
      <if test="record.courseLike != null" >
        course_like = #{record.courseLike,jdbcType=INTEGER},
      </if>
      <if test="record.courseLevel != null" >
        course_level = #{record.courseLevel,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null" >
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteTime != null" >
        delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update course
    set course_id = #{record.courseId,jdbcType=INTEGER},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      course_intro = #{record.courseIntro,jdbcType=VARCHAR},
      course_author = #{record.courseAuthor,jdbcType=VARCHAR},
      course_avatar = #{record.courseAvatar,jdbcType=VARCHAR},
      course_view = #{record.courseView,jdbcType=INTEGER},
      course_like = #{record.courseLike,jdbcType=INTEGER},
      course_level = #{record.courseLevel,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      delete_time = #{record.deleteTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.atguigu.springboot.entity.Course" >
    update course
    <set >
      <if test="courseName != null" >
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseIntro != null" >
        course_intro = #{courseIntro,jdbcType=VARCHAR},
      </if>
      <if test="courseAuthor != null" >
        course_author = #{courseAuthor,jdbcType=VARCHAR},
      </if>
      <if test="courseAvatar != null" >
        course_avatar = #{courseAvatar,jdbcType=VARCHAR},
      </if>
      <if test="courseView != null" >
        course_view = #{courseView,jdbcType=INTEGER},
      </if>
      <if test="courseLike != null" >
        course_like = #{courseLike,jdbcType=INTEGER},
      </if>
      <if test="courseLevel != null" >
        course_level = #{courseLevel,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteTime != null" >
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.atguigu.springboot.entity.Course" >
    update course
    set course_name = #{courseName,jdbcType=VARCHAR},
      course_intro = #{courseIntro,jdbcType=VARCHAR},
      course_author = #{courseAuthor,jdbcType=VARCHAR},
      course_avatar = #{courseAvatar,jdbcType=VARCHAR},
      course_view = #{courseView,jdbcType=INTEGER},
      course_like = #{courseLike,jdbcType=INTEGER},
      course_level = #{courseLevel,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP}
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>

  <select id="selectByQuery" parameterType="java.lang.String" resultMap="BaseResultMap">

    select
    <include refid="Base_Column_List" />
    from course
    where course_name like concat(concat('%',#{query,jdbcType=VARCHAR}) ,'%')
    order by course_id
  </select>

  <update id="recoverCourseByPrimaryKey" parameterType="java.lang.String">
    update course set delete_time=NULL where course_id = #{courseId,jdbcType=INTEGER}
  </update>
</mapper>